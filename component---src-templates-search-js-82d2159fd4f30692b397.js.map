{"version":3,"sources":["webpack:///./src/templates/search.js"],"names":["SearchTemplate","searchData","pageContext","useState","query","setQuery","results","setResults","data","console","log","title","to","style","marginTop","textAlign","onSubmit","e","preventDefault","searchResults","Object","keys","forEach","key","flat","filter","node","localised_name","includes","push","margin","htmlFor","paddingRight","id","value","onChange","target","searchQuery","placeholder","width","length","map","result","i","slug","localised_description"],"mappings":"+LAoFeA,UA/EQ,SAAC,GAAqB,IACjCC,EADgC,EAAlBC,YACdD,WADgC,EAEdE,mBAAS,IAA5BC,EAFiC,KAE1BC,EAF0B,OAGVF,mBAAS,IAAhCG,EAHiC,KAGxBC,EAHwB,KAOhCC,EAASP,EAATO,KAyBR,OADAC,QAAQC,IAAIF,GAER,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKG,MA7BC,WA8BN,4BA9BM,UAgCN,kBAAC,OAAD,CAAMC,GAAG,KAAT,kBACA,6BACI,wBAAIC,MAAO,CAAEC,UAAU,MAAQC,UAAU,WAAzC,gDAGA,6BACI,0BAAMC,SA3BD,SAAAC,GACjBA,EAAEC,iBAEF,IAAMC,EAAgB,GAEtBC,OAAOC,KAAKb,GAAMc,SAAQ,SAAAC,GACtB,IAEMjB,EAFOE,EAAKe,GACAC,OACGC,QAAO,SAAAC,GAAI,OAAIA,EAAKC,eAAeC,SAASxB,MACjEe,EAAcU,KAAd,MAAAV,EAAa,YAASb,OAG1BC,EAAWY,KAgBK,yBAAKN,MAAO,CAAEiB,OAAQ,WAClB,2BAAOC,QAAQ,SAASlB,MAAO,CAAEmB,aAAc,SAA/C,0BAGA,2BACIC,GAAG,SACHC,MAAO9B,EACP+B,SA1CP,SAAAlB,GACjBR,QAAQC,IAAI,SAAUO,EAAEmB,OAAOF,OAC/B,IAAMG,EAAcpB,EAAEmB,OAAOF,MAE7B7B,EAASgC,IAuCeC,YAAY,yBACZzB,MAAO,CAAEiB,OAAQ,SAAUS,MAAO,aAK9C,gDAAsBjC,EAAQkC,QAC7BlC,EAAQmC,KAAI,SAACC,EAAQC,GAGlB,OACI,yBAAKpB,IAAKoB,GACN,4BAAKD,EAAOf,gBACZ,kBAAC,OAAD,CAAMf,GAAI8B,EAAOE,MAAOF,EAAOE,MAE/B,2BAAIF,EAAOG","file":"component---src-templates-search-js-82d2159fd4f30692b397.js","sourcesContent":["import React, { useState } from \"react\"\nimport { Link } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst SearchTemplate = ({ pageContext }) => {\n    const { searchData } = pageContext\n    const [query, setQuery] = useState(\"\")\n    const [results, setResults] = useState([])\n    //   const { allBooks, options } = bookData\n    const title = \"Search\"\n\n    const { data } = searchData\n\n    const onSearchData = e => {\n        console.log(\"search\", e.target.value)\n        const searchQuery = e.target.value\n\n        setQuery(searchQuery)\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault()\n\n        const searchResults = []\n\n        Object.keys(data).forEach(key => {\n            const rows = data[key]\n            const flat = rows.flat()\n            const results = flat.filter(node => node.localised_name.includes(query))\n            searchResults.push(...results)\n        })\n\n        setResults(searchResults)\n    }\n\n    console.log(data)\n    return (\n        <Layout>\n            <SEO title={title} />\n            <h2>{title}</h2>\n\n            <Link to=\"/\">Return to list</Link>\n            <div>\n                <h1 style={{ marginTop: `3em`, textAlign: `center` }}>\n                    Search data using JS Search using Gatsby API\n                </h1>\n                <div>\n                    <form onSubmit={handleSubmit}>\n                        <div style={{ margin: \"0 auto\" }}>\n                            <label htmlFor=\"Search\" style={{ paddingRight: \"10px\" }}>\n                                Enter your search here\n                            </label>\n                            <input\n                                id=\"Search\"\n                                value={query}\n                                onChange={onSearchData}\n                                placeholder=\"Enter your search here\"\n                                style={{ margin: \"0 auto\", width: \"400px\" }}\n                            />\n                        </div>\n                    </form>\n\n                    <div>Number of items {results.length}</div>\n                    {results.map((result, i) => {\n                        // return(<pre key={i}>{JSON.stringify(result, null, 4)}</pre>)\n\n                        return (\n                            <div key={i}>\n                                <h4>{result.localised_name}</h4>\n                                <Link to={result.slug}>{result.slug}</Link>\n                                {/* <p>{result.image_path}</p> */}\n                                <p>{result.localised_description}</p>\n                            </div>\n                        )\n                    })}\n                    {/* <ClientSearch books={allBooks} engine={options} /> */}\n                    {/* <pre>{JSON.stringify(searchData, null, 4)}</pre> */}\n                </div>\n            </div>\n        </Layout>\n    )\n}\n\nexport default SearchTemplate\n"],"sourceRoot":""}